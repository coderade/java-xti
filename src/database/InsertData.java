package database;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class InsertData
{
	public static void main(String[] args)
	{
		String url = "jdbc:oracle:thin:@localhost:1521:xe";
		String parameter = "INSERT INTO PERSON VALUES(?,?,?,?)";
		String[] people = {"Vanessa", "Camila", "Larissa", "Luana"};
		try(Connection con = DriverManager.getConnection(url, "valdeci", "8428"))//A connection (session) with a specific database. SQL statements are executed and results are returned within the context of a connection.
		{
			try(PreparedStatement stm = con.prepareStatement(parameter);)//Prepared Statement=> An object that represents a precompiled SQL statement.
			{
				for (int i = 0; i<people.length; i++)
				{
					stm.setInt(1, i+2);//Sets the designated parameter to the given Java int value. The driver converts this to an SQL INTEGER value when it sends it to the database.
					stm.setString(2, people[i]);//Sets the designated parameter to the given Java String value. The driver converts this to an SQL VARCHAR or LONGVARCHAR value
					stm.setString(4, "f");
					stm.setString(3, people[i].toLowerCase() + "@coderade.in");
					stm.addBatch();//Sets the designated parameter to the given Java String value. The driver converts this to an SQL VARCHAR or LONGVARCHAR value
				}

			//stm.executeUpdate();//Executes the SQL statement in this PreparedStatement object, which must be an SQL Data Manipulation Language (DML) statement
			stm.executeBatch();//Submits a batch of commands to the database for execution and if all commands execute successfully, returns an array of update counts.
			}
			catch(Exception e) {}
			parameter = "Select name, email from Person";
				try(PreparedStatement stm2 = con.prepareStatement(parameter);
					ResultSet set = stm2.executeQuery())//Result Test = A table of data representing a database result set, which is usually generated by executing a statement that queries the database.
				{
					while(set.next())
					{
						System.out.println("name: " + set.getString(1).toLowerCase() + ", email: " + set.getString(2).toLowerCase());
					}
				}

		}
		catch (Exception e)
		{
			System.out.println("Invalid parameters! ");
		}


	}
}
